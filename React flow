public void transitionJiraIssueToDone(
        String jiraPAT,
        String projectKey,
        Set<String> jiraSet,
        Set<String> cyberPortSet,
        Map<String, String> jiraKeyToVulns,
        String transitionId
) {
    Set<String> resolvedJiraKeySet = getResolvedJiralds(jiraSet, cyberPortSet, jiraKeyToVulns);
    log.info("Total issues to transition: {}", resolvedJiraKeySet.size());

    int successCount = 0;
    int failureCount = 0;

    for (String jiraId : resolvedJiraKeySet) {
        boolean success = false;
        int retries = 3;

        while (!success && retries > 0) {
            try {
                Map<String, Object> transitionMap = Map.of(
                        "transition", Map.of("id", transitionId)
                );
                String jsonBody = objectMapper.writeValueAsString(transitionMap);
                String url = jiraBaseUrl + "/issue/" + jiraId + "/transitions";

                Request request = new Request.Builder()
                        .url(url)
                        .addHeader("Authorization", "Bearer " + jiraPAT)
                        .addHeader("Content-Type", "application/json")
                        .post(RequestBody.create(jsonBody, MediaType.parse("application/json")))
                        .build();

                try (Response response = okHttpClient.newCall(request).execute()) {
                    if (response.isSuccessful()) {
                        log.info("✅ Jira ID {} transitioned to Done", jiraId);
                        success = true;
                        successCount++;
                    } else if (response.code() == 429) {
                        String retryAfter = response.header("Retry-After");
                        int waitTime = 5;

                        if (retryAfter != null) {
                            try {
                                waitTime = Integer.parseInt(retryAfter) + 1;
                            } catch (NumberFormatException e) {
                                log.warn("Invalid Retry-After header for {}: {}", jiraId, retryAfter);
                            }
                        }

                        log.warn("Rate limited. Retrying Jira ID {} after {} seconds", jiraId, waitTime);
                        Thread.sleep(waitTime * 1000L);
                        continue; // retry without decrementing retries
                    } else {
                        String responseBody = response.body() != null ? response.body().string() : "No response body";
                        log.error("❌ Failed to transition Jira ID {}. Code: {}, Response: {}",
                                jiraId, response.code(), responseBody);
                        retries--;
                    }
                }

                Thread.sleep(500); // small delay between each transition

            } catch (Exception e) {
                retries--;
                log.error("Exception while transitioning Jira ID {}: {}", jiraId, e.getMessage(), e);
            }
        }

        if (!success) {
            log.error("❌ Failed to transition Jira ID {} after 3 attempts", jiraId);
            failureCount++;
        }
    }

    log.info("✅ Transition complete. Success: {}, Failed: {}", successCount, failureCount);
}
